interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Post implements Node {
  id: ID!
  title: String!
  body: String!
  tags: [String]
  slug: [String]
  author: User
  publishedAt: String
}

type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge]
}

type PostEdge {
  node: Post
  cursor: String!
}

type Query {
  node(id: ID!): Node
  test: Test
  getPostBySlug(slug: String!): Post
}

type Test {
  posts(before: String, after: String, first: Int, last: Int): PostConnection
}

type User implements Node {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  posts(before: String, after: String, first: Int, last: Int): PostConnection
}
